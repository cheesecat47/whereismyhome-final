<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.whereismyhome.board.model.mapper.BoardMapper">

    <insert id="writeArticle" parameterType="boardDetailDto">
        insert into `board`(title, content, type, memberId, dongCode, hit, createdTime)
        values (#{title}, #{content}, #{type}, #{memberId}, #{dongCode}, 0, now())
    </insert>

    <!-- 공지사항 게시판에서 사용할 공지글 목록 조회 쿼리문 -->
    <!-- 글 목록 테이블을 보여줄 때 사용할 데이터이므로 데이터 양이 많은 content(글 본문)는 쿼리 결과에서 제외. -->
    <select id="getNotices" parameterType="string" resultType="boardListDto">
        select board.boardid,
               board.title,
               board.type,
               board.memberid,
               concat(member.emailAccount, '@', member.emailDomain) memberEmail,
               member.name memberName,
               board.dongcode,
               board.hit,
               board.createdtime
        from board,
             member
        where board.memberId = member.memberId
          and board.deletedTime is null
          and member.deletedTime is null
          and type = 1
        <if test="searchBy != null and searchKeyword != null">
            <choose>
                <when test="searchBy == 'title'">and board.title</when>
                <when test="searchBy == 'memberName'">and member.name</when>
                <when test="searchBy == 'content'">and board.content</when>
            </choose>
            like concat('%', #{searchKeyword}, '%')
        </if>
        order by board.boardId<if test="orderBy == 'desc'"> desc</if>
    </select>

    <!-- 커뮤니티 게시판에서 사용할 동네별 글 목록 조회 쿼리문 -->
    <!-- 공지사항 게시판과는 달리 커뮤니티 게시판은 상세 보기가 없고 게시판 화면에 내용을 바로 보여줄 것이므로 -->
    <!-- content(글 내용)가 포함되고 hit(조회수)가 제외됨. -->
    <select id="getCommunityArticles" parameterType="string" resultType="boardListDto">
        select board.boardid,
               board.title,
               board.content,
               board.type,
               board.memberid,
               concat(member.emailAccount, '@', member.emailDomain) memberEmail,
               member.name memberName,
               board.dongcode,
               board.createdtime
        from board,
             member
        where board.memberId = member.memberId
          and board.deletedTime is null
          and member.deletedTime is null
          and dongCode = #{dongCode}
          and type = 0
        <if test="searchBy != null and searchKeyword != null">
            <choose>
                <when test="searchBy == 'title'">and board.title</when>
                <when test="searchBy == 'memberName'">and member.name</when>
                <when test="searchBy == 'content'">and board.content</when>
            </choose>
            like concat('%', #{searchKeyword}, '%')
        </if>
        order by board.boardId<if test="orderBy == 'desc'"> desc</if>
    </select>

    <select id="getArticleById" parameterType="int" resultType="boardDetailDto">
        select board.boardid,
               board.title,
               board.content,
               board.type,
               board.memberid,
               concat(member.emailAccount, '@', member.emailDomain) memberEmail,
               member.name memberName,
               board.dongcode,
               board.hit,
               board.createdtime,
               board.updatedtime
        from board,
             member
        where board.memberId = member.memberId
          and board.deletedTime is null
          and member.deletedTime is null
          and boardId = #{boardId};
    </select>

    <update id="updateArticleById" parameterType="boardDetailDto">
        update board
        <trim prefix="set" suffixOverrides=",">
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            updatedTime = now(),
        </trim>
        where boardId = #{boardId}
          and memberId = #{memberId}
          and board.deletedTime is null
    </update>

    <update id="deleteArticleById" parameterType="int">
        update board
        set updatedTime = now(),
            deletedTime = now()
        where boardId = #{board_id}
    </update>

    <update id="increaseArticleHit" parameterType="int">
        update board
        set hit = hit + 1
        where boardId = #{board_id}
    </update>
</mapper>
