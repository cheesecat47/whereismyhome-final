<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.whereismyhome.member.model.mapper.MemberMapper">

    <select id="loginMember" parameterType="String" resultType="memberDto">
        select memberId,
               name,
               age,
               sex,
               emailAccount,
               emailDomain,
               authorization
        from member
        where memberId = #{memberId}
          and password = #{password}
    </select>

    <insert id="signUpMember" parameterType="signUpMemberRequestDto">
        insert into member (emailAccount, emailDomain, password, name, age, sex, authorization)
        values (#{emailAccount}, #{emailDomain}, #{password}, #{name}, #{age}, #{sex}, 0)
    </insert>

    <update id="updateMember" parameterType="MemberDto">
        update member
        <trim prefix="set" suffixOverrides=",">
            <if test="age > 0">age = #{age},</if>
            <if test="sex != null">sex = #{sex},</if>
            <if test="password != null">password = #{password},</if>
            <if test="emailAccount != null">emailAccount = #{emailAccount},</if>
            <if test="emailDomain != null">emailDomain = #{emailDomain},</if>
            updatedTime = now(),
        </trim>
        where memberId = #{memberId}
    </update>

    <delete id="deleteMemberById" parameterType="String">
        delete
        from member
        where memberId = #{memberId}
    </delete>

    <select id="getMembers" resultType="memberDto">
        select memberId,
               name,
               password,
               age,
               sex,
               emailAccount,
               emailDomain,
               authorization,
               createdTime,
               updatedTime,
               dongCode,
               refreshToken
        from member
        order by memberId
    </select>

    <select id="getMemberById" parameterType="string" resultType="memberDto">
        select memberId,
               name,
               password,
               age,
               sex,
               emailAccount,
               emailDomain,
               authorization,
               createdTime,
               updatedTime,
               dongCode,
               refreshToken
        from member
        where memberId = #{memberId}
    </select>

</mapper>
